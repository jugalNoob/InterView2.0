--all about the Http protocol ||||||||||||||||

Q what is a Http Request?

AnS::--><><><> A packet to load a website . include GET/Post , Headers And Body ;


Example GET Request ...

GET /doc / test .HTML Http /   --> Request Line

Host :: www.test101.com

Accept-Language : En-us

Accept-Encoding: gzip , deflate

user-Agent : Mozilla/4.0

Contect-Length: 35

bookID=145245552=tan+Ah+Teck --- > Request message body



Q what is HTTP Respones ?

Ans:: Packet Providing permission to access website and connect 
Include Get/POST ,Header and Body (complete Program of that Page)

Example ....

Http /1.1 200 ok

Date: Sun , 08 peb xxxx 

server:Apache / 1.2.9 (win32)

last-Modified :Sat , 09  Feb XXX

ETag : "0-23-4024c3a5"

Accept Ranges:Bytes

Contect-length:35

connection:close

Contect-Types : text/Html

<H1> My Home page </h1> --->Respone Message body



Q Types of request Methods

Get--><>< Data   transfer throungh URL easily visible and not secure.

Head --<><><< same as Get  but transfer the status line and header section only

Post --<><> sends user Information & file in body , to server usering html forms

Pust --<> Replace all current Represenattion of of the target  resoure with the Upload contect  --<><> easily hacked 

Delete --><>> Remove all current representation of the target resourece given by a URL -->> easily hacked 

Options --><<> describe the communication option for the target resource 

Trace  ---<><><> Performs a messages loop-back test along the path to the target resource 

 Connect   ---<><> establishes a tunnel to the server identified by a given URL



Q what is URLS?

1:: URL (uniform Resource Locator)

2:: Web Resource Unique  identifier 

3:: Proctocol :// Hostname[:port]/[path/]file[?param=value]

4::http://ws.com80/auth/login.ashx?uid=129

5::URL (uniform Resource Locator)



Q what is Rest API?

1:RestApi --> Representation state transfer

2 -- web API Guidelines

3-->> Rest web APi

4--> Appliaction programming interface 

5--> URL & Http Packets



-----------<><><><><>  All About The hhtp headers :::::::::::::__________))

 
Q what is Http header --<><>

Ans::The Http headers are used to pass additinal information between 
the client and the server throungh the request and response header

::: -- Types of general Header ------------------------------

.. Connection --tells to close or open Tcp Communication on behalf of HTTP Transmission

.. Content-Encoding  ---> Specifies what Kind of encoding is Being used gzip delfate

.. Content-Length --> specifices th length of the message body (Bytes)

..Content-Types  specifies Types of  content in message body  text/HTML

..Transfer-Encoding  ---> specifies any encoding on the message body over HTTP used to specify cheunked encoding  





::: Request Header -->  ------------------------

..Accept  =-->Tells the server what kinds of content the client is
willing to accept, such as image types and so on

..Accept-Encoding  -->what kinds of content encoding the client is willing
to accept.

..Authorization  -->submits credentials to the server for one of the
built-in HTTP authentication types.

...cookie  -->Submits cookies to the server that the server
previously issued

...Host  -->specifies the hostname that appeared in the full URL being requested

...If-Modified-Since  -->>specifies when the browser last receiver the request 
resource check for upload for update and instruct using  a respone with status code 304 for caching

...if-None-Match  -->>it verifies resourcese  status  using r-tage (entitg tag )  ID send by the servers for it resource fo cachiong


...Origin -->> cross-domain Ajax requests to indication the domain from which the request originated
 
..referer --> specifies the url from which the current request origination

..User-agent  -->> provides information about  the browers or other client software that generated the request.




Respone Headers -----------------------------

...Access-Control-Allow origin -->Indicates whether the resource can be retrieved
via cross-domain Ajax requests

..Cache-Control  -->>passes caching directives to the browser
(for example,no-cache)

..Etag  --> id of every shared resoruce generated by server

..Expires  --> tells validity of the contect of message body for cache use

..Loaction  -->Redirection respone  (those that have status  code starting with 3)  specify target of the redirect

..Pargma  --> passes caching directives to the browser (for example , no-cache)

..server  --><>  Provides information about the web server  software being used 

..set-Cookies 

...WWW.Authentication  --> respone that have a 401 status code to  provide details on the Types(s) of authentication that  server option

..X-Frame-Options --><><><>indicattes  whether and how the current respone may be loaded within  a browser frame




-----------What is Cookies  ??? )))<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

Q what is cookies ?

An: 1 --> Web browser

2: track , Personalize and save Information 

3: user session 

4: Cookies

5::Set-Cookie

6::Hijacking And Poisoning


Q what is Cookies Attributes ??

Ans::Name: The name of the cookie. It is a mandatory attribute and uniquely identifies the cookie.

Value: The value stored in the cookie. It is also mandatory and holds the data the cookie is meant to store.

Domain: Specifies the domain for which the cookie is valid. The cookie will be sent to this domain and its subdomains.

Path: Defines the URL path that must exist in the requested resource before sending the cookie. It limits the scope of the cookie to a specific path within the domain.

Expires/Max-Age:

Expires: Sets the expiry date and time for the cookie. After this time, the cookie
 will be deleted by the browser. This attribute uses a specific date format.

Max-Age: Specifies the maximum lifetime of the cookie in seconds. After this duration,
 the cookie will be deleted.

Secure: When set, the cookie will only be sent over secure (HTTPS) connections.
 It ensures the cookie is encrypted during transmission, enhancing security.

HttpOnly: When set, the cookie is inaccessible to JavaScript's Document.cookie
 API, helping mitigate the risk of cross-site scripting (XSS) attacks.

SameSite:

Strict: The cookie is sent only to the same site as the one that originated it, 
even when following a link to that site.

Lax: The cookie is sent when the user navigates to the cookie's origin site
 (e.g., following a link from an external site), but not with cross-site subrequests (e.g., loading images or frames).

None: The cookie is sent in all contexts, i.e., in responses to both
 first-party and cross-origin requests. If None is used, the Secure attribute must also be set.

Priority: Defines the priority of the cookie (Low, Medium, High). This attribute is useful 
in environments with limited space for cookies.


 

:::::::::::::::::::: ----------------------- What is Http status Code ))))))))))))))))))))))


Q what is Http status Code ?

Ans:  100 --name is Continue ::Continue the
connection for
receiving complete
message body
using Requests


200 -- OK -->request was  successful and the
response body
contains the resul
of the request. .

201 --created -->Is returned in
response to a PUT
request to indicate
that the request
was successful


301 --> Moved Permanently  -->Redirects to a
different URL,
Using Location
header.(Use New
URL)


302  --> Found --> Redirects to a different
URL, Using Location
header.(revert to the
original URL in
subsequent requests)


304 -->> Not Modified  -- > instructs the browser to use it cached copy of the requestd resourse . (If-Modified-Since & if-None

400 --> Bad Request --> Indicates that the client submitted an invalid HTTP request

401  -->unauthorized -->indicates that the server requires HTTP authentication before the request wiil be granted

403 --> Forbidden --> Indicates that no one is allowed to access the requested resource regardless  of authentication

404 --> Not Found --> Indicates that the Request resource does not exist 

405 --> Methods not Allowed - ->Indicates that the methods used in the request is not supported for the specified URL

413 --> Request Entity Too Large -->>this indicates that the body of your request is too large for the server to handle (buffer overflow)

414 -- > Request URL Too large --> it indicated that the URL used in the request is too larget for the server to handle 

500 --> Internal server error --> indicatees that the server encountered an error fulfilling the request error somewhere within the application 
processing 

503 --> services Unavailable -->


Q what is Https?

Ans: 1 --> Secure HyerText transfer Protocol 
2:: Application layer protocol

3::User SSL secure socket Layer

4::same as HTTP Port 443 

Encrypted Data

Q what is Http Proxies ?

AnS: Mediator  --> client brower and server -->configure in brower   --> Full control on request and Respones 


Q what is HTTP Authentication ?

HTTP Authentication  --> http protocol for value authentication schemes

Basic --> Send Credentical as Base64- encoded string in header for each request 

NTLM -->Uses Windows NTLM Protocol 

Digest --> uses MD5 checksums of a nonce with the  User's credentials



Q what is WebEncoding Sechmes?

Ans: Encryption (AES ,RSA , AND BlowFish)

jugal sharma  ---------> AES   ---------> Key ----------> mjhhcyicfvdytfvghhu





2:::Encoding (UNICODE,URL encoding,base64)

jugal sharma --------->Base 64 ------------>>kjidudsiushusifshfsifhfhfh



Q what is URL encoding ?
Ans: 1 :: Techniques to encode several characters 

2::Having special Meaning in URL scheme & HTTP

3::with prefix % followed by two unit ASCII code 

4::ASCII range 0x20 to 0x7e

5::`n % 3d __ =
`n % 20 __ space
`n % Oa ___ New line 



Q what is Unicode Encoding?

Ans:: Character encoding 

2::16-bit uncode=URL Encoding 

3::%u prefix  char Unicode hexadecimal  

4::%u2215___/ 
..%u00e9___e 

5::UTF-8 variable length Encoding %c2%a9 -c




Q what is HTML Encoding?

1::HTML entities 

specific   &quot; __ ''
literal   &ap
charaacters   &amp; __&
          &lt; __<
         &gt; ___>



2::HTML encoded 

ASCII   &#34;___''
code in  &#39; ___''
Decimal
form


3::HTML  encoding ?

ASCII  &#x222; __ ''
code in  &#x27; ___''
hexadeci
mal


